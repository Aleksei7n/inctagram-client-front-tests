{
	"info": {
		"_postman_id": "bb351dd1-07df-4c1b-8fc1-97a7410971a4",
		"name": "api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "26097420-bb351dd1-07df-4c1b-8fc1-97a7410971a4"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "devices",
							"item": [
								{
									"name": "terminate",
									"item": [
										{
											"name": "{deviceId}",
											"item": [
												{
													"name": "End session by ID",
													"id": "7897ff0f-68ec-4ef7-8dc7-2907c284dac5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/devices/terminate/:deviceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"devices",
																"terminate",
																":deviceId"
															],
															"variable": [
																{
																	"key": "deviceId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "d2355a50-c729-4309-a24d-8abe4530a3c2",
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "https://somegram.online/api/v1/devices/terminate/:deviceId",
																	"protocol": "https",
																	"host": [
																		"somegram",
																		"online"
																	],
																	"path": [
																		"api",
																		"v1",
																		"devices",
																		"terminate",
																		":deviceId"
																	],
																	"variable": [
																		{
																			"key": "deviceId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "3bb836ad-1012-4e8b-aab5-b3605e95e4d0",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/devices/terminate/:deviceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"devices",
																		"terminate",
																		":deviceId"
																	],
																	"variable": [
																		{
																			"key": "deviceId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "6e922c89-15f9-4895-99da-caf838144ef2",
															"name": "If the devices do not belong to the current user",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/devices/terminate/:deviceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"devices",
																		"terminate",
																		":deviceId"
																	],
																	"variable": [
																		{
																			"key": "deviceId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "069a4987-d81c-4142-9385-a6ee92b18cd0",
															"name": "Session not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/devices/terminate/:deviceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"devices",
																		"terminate",
																		":deviceId"
																	],
																	"variable": [
																		{
																			"key": "deviceId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "855aef39-6e4e-4f40-b897-0e9d24bbb88a"
										},
										{
											"name": "End all sessions except the current one",
											"id": "9952688a-4726-4fe7-9b40-0b81c4270413",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/devices/terminate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"devices",
														"terminate"
													]
												}
											},
											"response": [
												{
													"id": "bb591571-19b2-440d-8040-43084c52036b",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "https://somegram.online/api/v1/devices/terminate",
															"protocol": "https",
															"host": [
																"somegram",
																"online"
															],
															"path": [
																"api",
																"v1",
																"devices",
																"terminate"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "12210d78-e396-4434-8d15-652e63a6e8ea",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/devices/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"devices",
																"terminate"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "db8a9b5c-c560-4cd7-ba21-3010e200e3cc",
													"name": "Sessions not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/devices/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"devices",
																"terminate"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "ae547367-e0ca-4847-a449-aff820761a83"
								},
								{
									"name": "Get all active sessions of the current user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    });",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "4ac3694d-fed0-467b-b547-a4da5cfec678"
											}
										}
									],
									"id": "a95145ec-b17d-4177-ab49-f6a771617c7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"devices"
											]
										}
									},
									"response": [
										{
											"id": "75d494f0-e31d-4925-bb9f-e0f663dd4589",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "https://somegram.online/api/v1/devices",
													"protocol": "https",
													"host": [
														"somegram",
														"online"
													],
													"path": [
														"api",
														"v1",
														"devices"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "0b551a45-f33f-4af8-96d0-0ef8846894ce"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"deviceId\": \"<string>\",\n    \"deviceName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastVisit\": \"<string>\"\n  },\n  {\n    \"deviceId\": \"<string>\",\n    \"deviceName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastVisit\": \"<string>\"\n  }\n]"
										},
										{
											"id": "7b6729fb-b353-45aa-af01-e7937464570f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"devices"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"id": "60b3affd-f0d5-4b37-ad43-65d78221854d"
						},
						{
							"name": "auth",
							"item": [
								{
									"name": "registration",
									"item": [
										{
											"name": "User registration",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Функция перемешивания массива (Фишера–Йетса)",
															"const shuffle = array => {",
															"  for (let i = array.length - 1; i > 0; i--) {",
															"    const j = Math.floor(Math.random() * (i + 1));",
															"    [array[i], array[j]] = [array[j], array[i]];",
															"  }",
															"  return array;",
															"};",
															"",
															"const randomString = (length, chars) => {",
															"  let result = '';",
															"  for (let i = 0; i < length; i++) {",
															"    result += chars.charAt(Math.floor(Math.random() * chars.length));",
															"  }",
															"  return result;",
															"};",
															"",
															"// Генерация username (6–30 символов)",
															"const usernameLength = Math.floor(Math.random() * 25) + 6;",
															"const usernameChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-';",
															"const username = randomString(usernameLength, usernameChars);",
															"pm.environment.set('username', username);",
															"pm.environment.set('email', username.toLowerCase() + '@example.com');",
															"",
															"// Генерация пароля (10 символов, без кавычек)",
															"function generateValidPassword(length) {",
															"  const upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';",
															"  const lower = 'abcdefghijklmnopqrstuvwxyz';",
															"  const digits = '0123456789';",
															"  // УБИРАЕМ \", ', `, \\ и любые другие «проблемные» символы",
															"  const special = '!#$%&()*+,-./:;<=>?@[]^_`{|}~';",
															"  const all = upper + lower + digits + special;",
															"",
															"  let pwd;",
															"  while (true) {",
															"    // Берём по одному символу из каждой группы",
															"    let pwdArr = [",
															"      upper[Math.floor(Math.random() * upper.length)],",
															"      lower[Math.floor(Math.random() * lower.length)],",
															"      digits[Math.floor(Math.random() * digits.length)],",
															"      special[Math.floor(Math.random() * special.length)]",
															"    ];",
															"",
															"    // Заполняем оставшиеся позиции",
															"    while (pwdArr.length < length) {",
															"      pwdArr.push(all.charAt(Math.floor(Math.random() * all.length)));",
															"    }",
															"    pwd = shuffle(pwdArr).join('');",
															"",
															"    // Проверяем, что есть все 4 типа символов",
															"    if (/[A-Z]/.test(pwd) &&",
															"        /[a-z]/.test(pwd) &&",
															"        /[0-9]/.test(pwd) &&",
															"        /[!#$%&()*+,\\-./:;<=>?@\\[\\]^_`{|}~]/.test(pwd)) {",
															"      break;",
															"    }",
															"  }",
															"  return pwd;",
															"}",
															"",
															"const password = generateValidPassword(10);",
															"pm.environment.set('password', password);",
															"pm.environment.set('passwordConfirmation', password);",
															"",
															"// html как в спецификации",
															"const htmlTemplate = `<b>Hello, ##name##!</b><br/>Please confirm your email by clicking on the link below:<br/><a href=\"http://localhost:3000/confirm-email/##token##\">Confirm email</a>. If it doesn't work, copy and paste the following link in your browser:<br/>http://localhost:3000/confirm-email/##token##`;",
															"pm.environment.set('html', htmlTemplate);",
															"",
															"// Debug логи",
															"console.log(\"Username:\", username);",
															"console.log(\"Email:\", pm.environment.get(\"email\"));",
															"console.log(\"Password:\", password);",
															"",
															"// Обновляем тело запроса",
															"if (pm.request.body && pm.request.body.mode === 'raw') {",
															"  let body = JSON.parse(pm.request.body.raw);",
															"  body.username = pm.environment.get('username');",
															"  body.email = pm.environment.get('email');",
															"  body.password = pm.environment.get('password');",
															"  body.passwordConfirmation = pm.environment.get('passwordConfirmation');",
															"  body.html = pm.environment.get('html');",
															"  pm.request.body.update(JSON.stringify(body));",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "9a280216-328b-4d61-a0e0-0195f9cff1f1"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code === 204) {",
															"    pm.test(\"Статус код - 204\", function () {",
															"        pm.response.to.have.status(204);",
															"    });",
															"} else if (pm.response.code === 400) {",
															"    pm.test(\"Статус код - 400\", function () {",
															"        pm.response.to.have.status(400);",
															"    });",
															"    ",
															"    var jsonData = {};",
															"    if (pm.response.text().trim() !== \"\") {",
															"        jsonData = pm.response.json();",
															"    }",
															"    ",
															"    pm.test(\"Проверка содержимого ответа для 400\", function () {",
															"        pm.expect(jsonData).to.have.property(\"status\", 400);",
															"        pm.expect(jsonData).to.have.property(\"error\", \"Bad request\");",
															"        pm.expect(jsonData).to.have.property(\"message\", \"Username is already taken.\");",
															"    });",
															"} else if (pm.response.code === 422) {",
															"    pm.test(\"Статус код - 422\", function () {",
															"        pm.response.to.have.status(422);",
															"    });",
															"    ",
															"    var jsonData = {};",
															"    if (pm.response.text().trim() !== \"\") {",
															"        jsonData = pm.response.json();",
															"    }",
															"    ",
															"    pm.test(\"Проверка содержимого ответа для 422\", function () {",
															"        pm.expect(jsonData).to.have.property(\"statusCode\", 422);",
															"        pm.expect(jsonData).to.have.property(\"message\", \"Validation failed\");",
															"        pm.expect(jsonData).to.have.property(\"errors\");",
															"        pm.expect(jsonData.errors).to.be.an(\"array\");",
															"    });",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "2e164221-a600-46fc-a37b-d22e1b8a1942"
													}
												}
											],
											"id": "a32493ac-3773-4d2d-af84-97ab03dae55b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"{{username}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"html\": \"{{html}}\"\n}\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"registration"
													]
												}
											},
											"response": [
												{
													"id": "24fbcb76-fddd-4828-9205-659420841312",
													"name": "Registration success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"w1AasYlnYt\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://somegram.online/api/v1/auth/registration",
															"protocol": "https",
															"host": [
																"somegram",
																"online"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "94221d6e-c70c-473f-8c40-37a606e7fea9",
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"w1AasYlnYt\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "a94dab18-7166-4e4c-83f8-d5a7f92b66b8"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "6afb2eff-b582-44b7-94bf-f95aa3800dc3",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"w1AasYlnYt\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "07e2162c-f4b4-4235-9922-64f70d3d739d"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "40a0e5fe-437d-4bbd-9529-ee892277c4d7"
								},
								{
									"name": "registration-confirmation",
									"item": [
										{
											"name": "Registration Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code === 204) {",
															"    pm.test(\"Статус код - 204\", function () {",
															"        pm.response.to.have.status(204);",
															"    });",
															"} else if (pm.response.code === 400) {",
															"    var jsonData = {};",
															"    if (pm.response.text().trim() !== \"\") {",
															"        try {",
															"            jsonData = pm.response.json();",
															"        } catch (e) {",
															"            // Если не удалось распарсить тело ответа, оставляем пустой объект",
															"        }",
															"    }",
															"    var errorMessage = jsonData.message || \"Нет сообщения об ошибке\";",
															"    pm.test(\"Ожидался статус 204, но получен 400 - \" + errorMessage, function () {",
															"        pm.expect(pm.response.code).to.eql(204);",
															"    });",
															"} else if (pm.response.code === 404) {",
															"    var errorText = pm.response.text().trim();",
															"    // Если тело ответа пустое, используем значение по умолчанию",
															"    var errorMessage = errorText.length > 0 ? errorText : \"Token or user not found\";",
															"    pm.test(\"Ожидался статус 204, но получен 404 - \" + errorMessage, function () {",
															"        pm.expect(pm.response.code).to.eql(204);",
															"    });",
															"} else if (pm.response.code === 422) {",
															"    var jsonData = {};",
															"    if (pm.response.text().trim() !== \"\") {",
															"        try {",
															"            jsonData = pm.response.json();",
															"        } catch (e) {",
															"            // Если не удалось распарсить тело ответа, оставляем пустой объект",
															"        }",
															"    }",
															"    var errorMessage = jsonData.message || \"Нет сообщения об ошибке\";",
															"    pm.test(\"Ожидался статус 204, но получен 422 - \" + errorMessage, function () {",
															"        pm.expect(pm.response.code).to.eql(204);",
															"    });",
															"} else {",
															"    pm.test(\"Ожидался статус 204, но получен \" + pm.response.code, function () {",
															"        pm.expect(pm.response.code).to.eql(204);",
															"    });",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "a6c63207-b04d-4721-be30-6d2901b30889"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Если переменной \"confirmationToken\" нет в окружении – устанавливаем значение по умолчанию (значение из примера документации)",
															"if (!pm.environment.get(\"confirmationToken\")) {",
															"    pm.environment.set(\"confirmationToken\", \"hlMdq0ghJbmujPQ+adSo+qX6aP0=\");",
															"}",
															"",
															"// Если тело запроса задано в формате raw JSON, подставляем token из переменной окружения",
															"if (pm.request.body && pm.request.body.mode === \"raw\") {",
															"    let body = JSON.parse(pm.request.body.raw);",
															"    body.token = pm.environment.get(\"confirmationToken\");",
															"    pm.request.body.update(JSON.stringify(body));",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "6e80cff0-2982-43fe-8dd0-a55c8789bdb9"
													}
												}
											],
											"id": "ef03a6ac-974c-468e-b0fc-7e7e7c21318c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/registration-confirmation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"registration-confirmation"
													]
												}
											},
											"response": [
												{
													"id": "611a7485-7fde-4fed-b285-a6257c015713",
													"name": "Registration confirmation successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://somegram.online/api/v1/auth/registration-confirmation",
															"protocol": "https",
															"host": [
																"somegram",
																"online"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-confirmation"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "8b0dc518-70da-420a-bf19-d57cccd5945a",
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-confirmation"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "0bce6b03-46c2-420a-922e-58658a470e8b"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "de884c42-c51c-4d72-8fcb-b5e6efe468ec",
													"name": "User with confirmation token not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-confirmation"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "ffdd8378-9c00-438a-86f4-a91777a73e01",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-confirmation"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "aa0e5148-3d5c-466d-88f1-21688291c340"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "3373e82c-1928-4f29-bba4-19e3dc8fe1a9"
								},
								{
									"name": "registration-email-resending",
									"item": [
										{
											"name": "Resend confirmation registration Email if user exists",
											"id": "11cae4e6-60db-4533-bea8-fdb68a9d81fd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\",\n  \"html\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/registration-email-resending",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"registration-email-resending"
													]
												}
											},
											"response": [
												{
													"id": "d6c0b77f-8e71-4130-89bc-042190cc50f3",
													"name": "A letter will be sent again to the email address you provided during registration.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-email-resending",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-email-resending"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "d80a293e-d2e2-4957-be8f-3eee1bbe3b18",
													"name": "Email resending failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-email-resending",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-email-resending"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "9b8b37e5-9d94-4c92-bd54-50f9c403b6d6"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "897ab4f7-5ddb-46de-bd1f-2101a23c220e",
													"name": "Token or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-email-resending",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-email-resending"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "8af59e1b-4f2c-49f8-9775-9517a6e6b916",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/registration-email-resending",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"registration-email-resending"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "862a0af7-e343-4136-b352-235961e7f3fb"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "77b635c2-993b-4a4f-960a-3f1dc9d7ffb7"
								},
								{
									"name": "google",
									"item": [
										{
											"name": "callback",
											"item": [
												{
													"name": "Google Authentication Callback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript",
																"packages": {},
																"id": "cf885036-e267-49f0-8a9f-2bb8e478281b"
															}
														}
													],
													"id": "cfa24573-fcc4-41aa-8617-24c812ec1d26",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/google/callback",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"google",
																"callback"
															]
														}
													},
													"response": [
														{
															"id": "de959e3e-3f18-4325-b768-25c6ea22cf43",
															"name": "Login successful.\nRedirect to home page. ({homePage}/?accessToken={accessToken})\nThe refreshToken is set in an HTTP-only cookie.\nThe accessToken set to the query parameter.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/auth/google/callback",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"auth",
																		"google",
																		"callback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "fe0541ca-823f-479a-ae2d-1400de60713c",
															"name": "Login failed due to wrong email or ip or useragent not correct or not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/auth/google/callback",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"auth",
																		"google",
																		"callback"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "12a54d72-b77b-4c81-9f83-6e19a0ba94e2"
																}
															],
															"cookie": [],
															"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "ad0d477d-88cd-42fb-b973-dbfe2492bf53"
										},
										{
											"name": "Auth Controller google Auth",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript",
														"packages": {},
														"id": "12f217fa-ae11-4264-bb8f-6a2172778323"
													}
												}
											],
											"id": "d6f26990-1c56-4925-9e09-9274319cd2be",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/google",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"google"
													]
												}
											},
											"response": [
												{
													"id": "213d932e-0019-4975-8516-5c3802974d5e",
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/google",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"google"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "98eeee07-025b-4fda-a19f-3b65b004e08b"
								},
								{
									"name": "recaptcha-site-key",
									"item": [
										{
											"name": "Get the reCAPTCHA site key",
											"id": "0f578c5e-bbdd-479f-8e0c-46196260663e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/recaptcha-site-key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"recaptcha-site-key"
													]
												}
											},
											"response": [
												{
													"id": "00c20bcf-29e9-46a8-92c2-09189662145a",
													"name": "reCAPTCHA site key retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/recaptcha-site-key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"recaptcha-site-key"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "a8e2f74d-2ef2-4132-a5ae-26be9263d959"
														}
													],
													"cookie": [],
													"body": "{\n  \"recaptchaSiteKey\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "ae6f273a-b4e8-4a78-9687-0644310f3dae"
								},
								{
									"name": "restore-password",
									"item": [
										{
											"name": "Restore Password",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "b6eb2933-423f-4776-9fc1-38141920872a"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Проверяем, что статус ответа входит в ожидаемый набор",
															"pm.test(\"Статус ожидаем (204)\", function () {",
															"    pm.expect([204]).to.include(pm.response.code);",
															"});",
															"",
															"// Если статус 204 (успех), то тело ответа должно быть пустым",
															"if (pm.response.code === 204) {",
															"    pm.test(\"204 No Content: тело ответа пустое\", function () {",
															"        pm.response.to.have.status(204);",
															"        pm.expect(pm.response.text()).to.eql(\"\");",
															"    });",
															"}",
															"",
															"// Если статус 400 (неверный запрос)",
															"if (pm.response.code === 400) {",
															"    let jsonData = pm.response.json();",
															"    pm.test(\"400 Bad Request: проверка структуры ответа\", function () {",
															"        pm.expect(jsonData).to.have.property(\"status\", 400);",
															"        pm.expect(jsonData).to.have.property(\"error\", \"Bad request\");",
															"        pm.expect(jsonData).to.have.property(\"message\");",
															"    });",
															"}",
															"",
															"// Если статус 404 (пользователь не найден)",
															"if (pm.response.code === 404) {",
															"    pm.test(\"404 User Not Found: проверка кода статуса\", function () {",
															"        pm.response.to.have.status(404);",
															"        // Дополнительно можно добавить проверки структуры, если известен формат ответа",
															"    });",
															"}",
															"",
															"// Если статус 422 (ошибка валидации)",
															"if (pm.response.code === 422) {",
															"    let jsonData = pm.response.json();",
															"    pm.test(\"422 Validation Error: проверка структуры ошибки валидации\", function () {",
															"        pm.expect(jsonData).to.have.property(\"statusCode\", 422);",
															"        pm.expect(jsonData).to.have.property(\"message\", \"Validation failed\");",
															"        pm.expect(jsonData).to.have.property(\"errors\").that.is.an(\"array\");",
															"    });",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "9a2983dc-bb08-4d19-9922-2b2f532946a7"
													}
												}
											],
											"id": "8c1d4c07-240b-4138-a4e1-958f48528e36",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"recaptchaToken\": \"<string>\",\n  \"html\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/restore-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"restore-password"
													]
												}
											},
											"response": [
												{
													"id": "6ae1e3b0-18c1-4bb7-9a08-ab578d246bc8",
													"name": "Restore password successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"recaptchaToken\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "56f2584d-128f-421f-96e5-407cfc1b7075",
													"name": "Restore password failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"recaptchaToken\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "72c02f2d-4605-417b-b5c5-b5165b7efd4c"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "cee91aa1-4b57-43c5-b58b-99eeb85c6bd5",
													"name": "User not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"recaptchaToken\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "811a988d-5ef4-4628-872c-82b116dbec43",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"recaptchaToken\": \"<string>\",\n  \"html\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "7554df26-4faa-4321-85a9-6f5fb611d72a"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "249a0e62-a288-474a-a8c7-a2d1f53a9577"
								},
								{
									"name": "restore-password-confirmation",
									"item": [
										{
											"name": "Restore Password Confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Основной тест: проверяем, что статус код равен 204.",
															"pm.test(\"Код ответа должен быть 204\", function () {",
															"    pm.expect(pm.response.code).to.eql(204, \"Ожидался код 204, а получен: \" + pm.response.code);",
															"});",
															"",
															"// Если код 204, проверяем, что тело ответа пустое.",
															"if (pm.response.code === 204) {",
															"    pm.test(\"204 No Content: Тело ответа пустое\", function () {",
															"        pm.expect(pm.response.text()).to.eql(\"\");",
															"    });",
															"}",
															"",
															"// Дополнительные проверки для отладки: если статус 400, проверяем структуру ошибки.",
															"if (pm.response.code === 400) {",
															"    let jsonData = pm.response.json();",
															"    pm.test(\"400 Restore password confirmation failed: Проверка структуры ошибки\", function () {",
															"        pm.expect(jsonData).to.have.property(\"status\", 400);",
															"        pm.expect(jsonData).to.have.property(\"error\", \"Bad request\");",
															"        pm.expect(jsonData).to.have.property(\"message\");",
															"    });",
															"}",
															"",
															"// Проверка на 422: если ошибка валидации.",
															"if (pm.response.code === 422) {",
															"    let jsonData = pm.response.json();",
															"    pm.test(\"422 Validation error: Проверка структуры ошибки валидации\", function () {",
															"        pm.expect(jsonData).to.have.property(\"statusCode\", 422);",
															"        pm.expect(jsonData).to.have.property(\"message\", \"Validation failed\");",
															"        pm.expect(jsonData).to.have.property(\"errors\").that.is.an(\"array\");",
															"    });",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "926ecf02-6611-472b-9381-c5860cece7b0"
													}
												}
											],
											"id": "527a1768-648e-4aaf-8116-8a87da1da657",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/restore-password-confirmation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"restore-password-confirmation"
													]
												}
											},
											"response": [
												{
													"id": "00c7289f-616b-4407-9dae-6c0298b935db",
													"name": "Restore password confirmation successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password-confirmation"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "94365032-dd7a-4a06-9c6d-18398b49eef2",
													"name": "Restore password confirmation failed due to expired code",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password-confirmation"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "9a889281-f90d-4aa1-82b2-736ba850c7c9"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "abc9c24c-936d-4843-8f70-591500678e03",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/restore-password-confirmation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"restore-password-confirmation"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "508e50bc-f874-4eba-9b9c-cf9a9dcc1f45"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "0c490d78-83bc-4524-bb38-df1cb626e4eb"
								},
								{
									"name": "login",
									"item": [
										{
											"name": "User Login",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Вывод полного ответа в консоль для отладки",
															"console.log(\"Ответ сервера:\", pm.response.text());",
															"",
															"// Проверяем статус ответа",
															"pm.test(\"Проверка успешной авторизации или ошибки\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 401, 422]);",
															"});",
															"",
															"if (pm.response.code === 200) {",
															"    // Если авторизация успешна, ожидаем наличие accessToken в ответе",
															"    let jsonData = pm.response.json();",
															"    ",
															"    pm.test(\"Ответ содержит accessToken\", function () {",
															"        pm.expect(jsonData).to.have.property(\"accessToken\");",
															"        pm.expect(jsonData.accessToken).to.be.a(\"string\").and.to.have.length.above(0);",
															"    });",
															"    ",
															"    // Сохраняем accessToken в переменной окружения для последующего использования",
															"    pm.environment.set(\"accessToken\", jsonData.accessToken);",
															"    console.log(\"Access token сохранён:\", jsonData.accessToken);",
															"    ",
															"} else if (pm.response.code === 401) {",
															"    // Авторизация не пройдена, неверные данные или пользователь не подтверждён",
															"    pm.test(\"Ошибка авторизации: неверный email или пароль, либо пользователь не подтверждён\", function () {",
															"        pm.expect(pm.response.code).to.eql(401);",
															"    });",
															"    ",
															"} else if (pm.response.code === 422) {",
															"    // Ошибка валидации",
															"    let jsonData = pm.response.json();",
															"    pm.test(\"Ошибка валидации. Проверьте входные данные\", function () {",
															"        pm.expect(pm.response.code).to.eql(422);",
															"        pm.expect(jsonData).to.have.property(\"message\");",
															"        pm.expect(jsonData).to.have.property(\"errors\");",
															"    });",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "2286e51a-d0c8-462f-825d-778fa112cdf2"
													}
												}
											],
											"id": "13c8283f-69d2-4412-b85e-7e6846d8ef98",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"test.qaengineer11+1234@gmail.com\",\n  \"password\": \"Qq1234567.\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"login"
													]
												}
											},
											"response": [
												{
													"id": "e09c0aaf-d2eb-4885-a913-613aaf885a16",
													"name": "Login successful. The refreshToken is set in an HTTP-only cookie.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "d79c47b7-36c2-4b33-845b-f25c23fa970c"
														}
													],
													"cookie": [],
													"body": "{\n  \"accessToken\": \"<string>\"\n}"
												},
												{
													"id": "846479ea-28b4-4c20-9089-c7d9860de3ba",
													"name": "Wrong email or password or user not confirmed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "95d9e821-6461-4da6-83ac-e9aec924aaad",
													"name": "Validation error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"login"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "001f7aac-d22b-4498-87a2-cc99f669eb63"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "dc207b7d-3675-4986-a460-794713d850ff"
								},
								{
									"name": "logout",
									"item": [
										{
											"name": "Logout current user. In cookie client must send correct refreshToken that will be revoked",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Проверка, что код ответа равен 204",
															"pm.test(\"Код ответа должен быть 204\", function () {",
															"    pm.expect(pm.response.code).to.eql(204, \"Ожидался код 204, а получен: \" + pm.response.code);",
															"});",
															"",
															"// Если статус 204, то проверяем, что тело ответа пустое и, при необходимости, что cookie refreshToken отсутствует",
															"if (pm.response.code === 204) {",
															"    pm.test(\"204 No Content: Тело ответа должно быть пустым\", function () {",
															"        pm.expect(pm.response.text()).to.eql(\"\");",
															"    });",
															"    ",
															"    // Дополнительно можно проверить отсутствие cookie refreshToken, если сервер их удаляет",
															"    pm.test(\"Cookie refreshToken должна отсутствовать\", function () {",
															"        const refreshToken = pm.cookies.get(\"refreshToken\");",
															"        pm.expect(refreshToken).to.be.undefined;",
															"    });",
															"} else {",
															"    // Если код ответа не 204, обрабатываем сообщение об ошибке",
															"    try {",
															"        let errorJson = pm.response.json();",
															"        pm.test(\"Ошибка: Ответ должен содержать поле message\", function () {",
															"            pm.expect(errorJson).to.have.property(\"message\");",
															"        });",
															"        console.error(\"Ошибка при выходе пользователя: \" + errorJson.message);",
															"    } catch (e) {",
															"        // Если ответ не в формате JSON, проверяем, что тело не пустое и выводим его",
															"        console.error(\"Ошибка: Ответ не в формате JSON. Текст ответа: \" + pm.response.text());",
															"        pm.test(\"Ошибка: Тело ответа не пустое\", function () {",
															"            pm.expect(pm.response.text().length).to.be.above(0);",
															"        });",
															"    }",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {},
														"id": "e987bfbe-eb7f-4f84-b1e9-eba7b5291973"
													}
												}
											],
											"id": "21494f97-089a-488e-99f9-a73240b01991",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"logout"
													]
												}
											},
											"response": [
												{
													"id": "b5b3b86a-1b76-4151-b0f5-a728e73f18a8",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/logout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"logout"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "72ef977e-d4d6-4b08-8cbc-1a798908f69a",
													"name": "Token expired, user or user device not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/logout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"logout"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "e6ca2e90-b961-4855-9735-5231c6e93c86"
								},
								{
									"name": "refresh-token",
									"item": [
										{
											"name": "Generate new pair of access and refresh tokens (in cookie client must send correct refreshToken that will be revoked after refreshing) ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript",
														"packages": {},
														"id": "7ae739ed-0ba9-4a61-b6ad-30a196b5fb7c"
													}
												}
											],
											"id": "4ce07cb9-b533-4629-ad25-4b128d3bdc87",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/refresh-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"refresh-token"
													]
												}
											},
											"response": [
												{
													"id": "5857a4fb-a560-4e4d-b09e-adc1e8db5f1b",
													"name": "Returns JWT accessToken in body and JWT refreshToken in cookie.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/refresh-token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"refresh-token"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "c1f26986-fa72-41e0-871a-d220a4d057ca"
														}
													],
													"cookie": [],
													"body": "{\n  \"accessToken\": \"<string>\"\n}"
												},
												{
													"id": "e9d179c3-dda9-49df-a419-3dbf12821e28",
													"name": "Token expired, user or user device not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/refresh-token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"refresh-token"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "171a527d-e0d2-4e04-a9e5-28d9341bafad"
								},
								{
									"name": "github",
									"item": [
										{
											"name": "callback",
											"item": [
												{
													"name": "GitHub Authentication Callback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript",
																"packages": {},
																"id": "a68d9fee-2def-4c32-b360-a9319e842492"
															}
														}
													],
													"id": "295c9000-7758-42e3-89ba-f78747a8c7ce",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/github/callback",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"github",
																"callback"
															]
														}
													},
													"response": [
														{
															"id": "eec2d5c8-e4e6-4e31-b0d2-7b042e516f97",
															"name": "Login successful.\nRedirect to home page. ({homePage}/?accessToken={accessToken})\nThe refreshToken is set in an HTTP-only cookie.\nThe accessToken set to the query parameter.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/auth/github/callback",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"auth",
																		"github",
																		"callback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "48ad82f4-6a96-4626-94d0-f6ec95c1aed8",
															"name": "Unknown IP address or useragent",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/auth/github/callback",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"auth",
																		"github",
																		"callback"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "533c4606-c72b-425b-a411-cf2b9b55659a"
																}
															],
															"cookie": [],
															"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "ac6f9a2e-2c10-4936-a771-e34d384fe2f6"
										},
										{
											"name": "Auth Controller github Auth",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript",
														"packages": {},
														"id": "a9d3a6df-8ca8-41d1-8223-7257383e682a"
													}
												}
											],
											"id": "0567e4a9-88a0-43e7-94cf-4b5c4dfda8d8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/github",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"github"
													]
												}
											},
											"response": [
												{
													"id": "39c2e42e-fa4c-4517-ba07-03cd1b62580e",
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/github",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"github"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "c8235579-6bb1-437e-b7f9-ccb44059b12d"
								},
								{
									"name": "me",
									"item": [
										{
											"name": "Get info about user",
											"id": "1bac5720-2880-4a0b-917f-534af60de947",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/auth/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"auth",
														"me"
													]
												}
											},
											"response": [
												{
													"id": "d9eee21b-7546-4aa8-9f34-a7a502801237",
													"name": "Returns user information",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"me"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "64128af6-3bd6-4d7d-8062-fd71ae4db35c"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\"\n}"
												},
												{
													"id": "86b7623e-ec55-470f-aacb-8afeeff99c82",
													"name": "JWT token inside cookie missed, expired or incorrect",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/auth/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"auth",
																"me"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "4e96b78e-054c-4244-9b3d-5c8406986046"
								}
							],
							"id": "1b310a81-8833-4ba8-818b-8c64f84eb5cb"
						},
						{
							"name": "notifications",
							"item": [
								{
									"name": "read",
									"item": [
										{
											"name": "{notificationId}",
											"item": [
												{
													"name": "Read notification by id for current user",
													"id": "18e5584d-a89e-4085-925b-2e96fa05398d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/notifications/read/:notificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"notifications",
																"read",
																":notificationId"
															],
															"variable": [
																{
																	"key": "notificationId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "d896d8e6-e06b-4d00-bacb-c132725eb08c",
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/notifications/read/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"notifications",
																		"read",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "1ebffeb0-1442-4d8d-bc63-c32f8a9e9041",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/notifications/read/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"notifications",
																		"read",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "df776aee-09f6-4b24-b437-17ea26eb479e",
															"name": "The notification does not belong to the current user",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/notifications/read/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"notifications",
																		"read",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "7e28158e-019e-48b1-a6c9-0d6fc77b3e71",
															"name": "Notification not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/notifications/read/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"notifications",
																		"read",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "2f18d9e6-544f-4eb2-b42e-71a25683682a"
										}
									],
									"id": "f400c86e-310f-4b32-8b41-96094b39ddd6"
								},
								{
									"name": "testing",
									"item": [
										{
											"name": "Testing send new notification into websocket connection",
											"id": "dc40258b-bdb1-4fbd-8b46-2a80e9eca6d8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/notifications/testing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"notifications",
														"testing"
													]
												}
											},
											"response": [
												{
													"id": "3b9861c8-8fe6-46e3-9e21-1083c65c3b82",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/notifications/testing",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"notifications",
																"testing"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "c3ac6578-b49d-47c8-85bc-63a3fd760cff",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/notifications/testing",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"notifications",
																"testing"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "2b5a35ce-4874-4fdf-b096-5d339a528496"
								},
								{
									"name": "Get notifications of the current user (for 1 month)",
									"id": "3d00695f-a57d-439d-836b-b4a321dc1189",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"notifications"
											]
										}
									},
									"response": [
										{
											"id": "59557eb2-f27d-4f61-83c0-60a132122dcc",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"notifications"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "450caa10-a227-4d5b-9379-acfa17db0424"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"isRead\": \"<boolean>\",\n    \"createdAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"isRead\": \"<boolean>\",\n    \"createdAt\": \"<dateTime>\"\n  }\n]"
										},
										{
											"id": "6a746a28-e10e-49bf-afed-01a5dbe88b9e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/notifications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"notifications"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"id": "9ff1b09a-743f-45d2-9928-ac4ad23d2e7b"
						},
						{
							"name": "wss:",
							"item": [
								{
									"name": "somegram.online",
									"item": [
										{
											"name": "notification",
											"item": [
												{
													"name": "error",
													"item": [
														{
															"name": "Exceptions",
															"id": "4bae8992-f29a-49e5-8ca8-573ed18da3e7",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																	"protocol": "{{baseUrl}}/api/v1/wss",
																	"host": [
																		"somegram",
																		"online"
																	],
																	"path": [
																		"notification",
																		"error"
																	]
																},
																"description": "All exceptions are returned in the event: `error`"
															},
															"response": [
																{
																	"id": "374383bf-a7a9-4426-ae6d-17f3d973577f",
																	"name": "Unauthorized",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																			"protocol": "{{baseUrl}}/api/v1/wss",
																			"host": [
																				"somegram",
																				"online"
																			],
																			"path": [
																				"notification",
																				"error"
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "b4e4a576-7ca9-4678-b973-dbf27d1a7fca"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"Success\"\n}"
																},
																{
																	"id": "95e75de5-887c-4915-a26b-38c32ad219a2",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																			"protocol": "{{baseUrl}}/api/v1/wss",
																			"host": [
																				"somegram",
																				"online"
																			],
																			"path": [
																				"notification",
																				"error"
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "faae1e1c-bbde-419e-9639-b289ed2a2be7"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"Forbidden\"\n}"
																},
																{
																	"id": "93085dc6-892c-4a19-9c21-8eca6fe2020f",
																	"name": "Not found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																			"protocol": "{{baseUrl}}/api/v1/wss",
																			"host": [
																				"somegram",
																				"online"
																			],
																			"path": [
																				"notification",
																				"error"
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "dace1f07-0ad2-44a7-bc69-e7a9986e2bca"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"BadRequest\"\n}"
																},
																{
																	"id": "f51ab732-f56d-4e99-a057-54643763f78b",
																	"name": "Validation error",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																			"protocol": "{{baseUrl}}/api/v1/wss",
																			"host": [
																				"somegram",
																				"online"
																			],
																			"path": [
																				"notification",
																				"error"
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "fc41bb64-5061-4652-aa62-9c115595e54d"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"UnprocessableEntity\",\n  \"payload\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"occaecat9\": \"<string>\",\n        \"elitd96\": \"<string>\",\n        \"elit_385\": \"<string>\",\n        \"aliquip_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"et94e\": \"<string>\",\n        \"voluptate60\": \"<string>\",\n        \"culpa_9db\": \"<string>\"\n      }\n    }\n  ]\n}"
																},
																{
																	"id": "b63b62c7-73ff-4a79-a939-9b174fc59064",
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification/error",
																			"protocol": "{{baseUrl}}/api/v1/wss",
																			"host": [
																				"somegram",
																				"online"
																			],
																			"path": [
																				"notification",
																				"error"
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json",
																			"uuid": "b4261c7d-cae1-460d-ba02-a9062f894442"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"BadRequest\"\n}"
																}
															]
														}
													],
													"id": "c7091847-74b6-42f5-bc9c-ec547cb5175d"
												},
												{
													"name": "Connection and listen notifications by event \"new_notification\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript",
																"packages": {},
																"id": "f76d3d4c-dbda-4121-a8ab-4f5cb7b1c325"
															}
														}
													],
													"id": "a75d8c8c-9168-4983-901f-19c655defd68",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification",
															"protocol": "{{baseUrl}}/api/v1/wss",
															"host": [
																"somegram",
																"online"
															],
															"path": [
																"notification"
															]
														},
														"description": "WebSocket server: `wss://somegram.online/notification` \n    \n The access token must be passed in the `'Authorization'` header."
													},
													"response": [
														{
															"id": "839c356a-502a-4480-8527-86631af5c948",
															"name": "New notification",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification",
																	"protocol": "{{baseUrl}}/api/v1/wss",
																	"host": [
																		"somegram",
																		"online"
																	],
																	"path": [
																		"notification"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "f993fffd-92c8-4629-afde-b94c748ca4c6"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"UnprocessableEntity\",\n  \"payload\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"isRead\": \"<boolean>\",\n    \"createdAt\": \"<dateTime>\"\n  }\n}"
														},
														{
															"id": "2da9ad08-6186-46db-916f-0091b96f252e",
															"name": "Unauthorized response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/wss://somegram.online/notification",
																	"protocol": "{{baseUrl}}/api/v1/wss",
																	"host": [
																		"somegram",
																		"online"
																	],
																	"path": [
																		"notification"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "6de45f96-861e-484b-84af-b87f858d8b79"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"Success\"\n}"
														}
													]
												}
											],
											"id": "2881d771-64b8-4be0-b628-1e9a58b6c27b"
										}
									],
									"id": "3c7b5772-5c14-4cc8-894b-21568a7505d0"
								}
							],
							"id": "4b361853-ea78-455f-97a6-6c91ba43e252"
						},
						{
							"name": "users",
							"item": [
								{
									"name": "profile-info",
									"item": [
										{
											"name": "Get Profile info",
											"id": "77f13fbe-73d7-4d58-b7b8-d04f03821fec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/profile-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"profile-info"
													]
												}
											},
											"response": [
												{
													"id": "104d14d3-5935-454e-aeae-740f36625979",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-info"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "a766fef1-aa00-4d6a-b2d3-1721129f26f9"
														}
													],
													"cookie": [],
													"body": "{\n  \"email\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\",\n  \"avatar\": {\n    \"url\": \"<string>\"\n  }\n}"
												},
												{
													"id": "05e04b46-4564-4342-b9a7-0627176e8d4a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-info"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "727448fa-5dd6-4bab-b15c-d49b3272e018"
								},
								{
									"name": "profile-upload-avatar",
									"item": [
										{
											"name": "Upload User Avatar",
											"id": "f5d61b1d-9bee-49a0-9b76-2326b73615bf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "value",
															"value": "reference #/components/schemas/ not found in the OpenAPI spec",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/profile-upload-avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"profile-upload-avatar"
													]
												}
											},
											"response": [
												{
													"id": "3c5c0abf-7e5a-4339-8308-1ff88e738df8",
													"name": "Avatar upload successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "value",
																	"value": "reference #/components/schemas/ not found in the OpenAPI spec",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-upload-avatar",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-upload-avatar"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "cf0e6b2f-87ef-4612-904d-51293783b969",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "value",
																	"value": "reference #/components/schemas/ not found in the OpenAPI spec",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-upload-avatar",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-upload-avatar"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "cbef3dda-7b17-469d-8e15-bb7e7604e6b9",
													"name": "Validation failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "value",
																	"value": "reference #/components/schemas/ not found in the OpenAPI spec",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-upload-avatar",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-upload-avatar"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "e986e6c0-b217-43d6-b7ed-8f9aabbcd3e5"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "f9e1df5b-743b-483b-a8db-8b801cd40637"
								},
								{
									"name": "profile-fill-info",
									"item": [
										{
											"name": "Fill User Profile",
											"id": "b0836e20-980a-4577-b458-4d7790c3c392",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/profile-fill-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"profile-fill-info"
													]
												}
											},
											"response": [
												{
													"id": "745d969c-ba82-4681-90fb-fb51ca5f89f1",
													"name": "Profile filled successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-fill-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-fill-info"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "4b394f3a-ca88-4361-a48e-7a5e65bcfbb5"
														}
													],
													"cookie": [],
													"body": "{\n  \"email\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\",\n  \"avatar\": {\n    \"url\": \"<string>\"\n  }\n}"
												},
												{
													"id": "b3dcbf03-5826-40dc-9071-578b92f47441",
													"name": "Bad request, if the current username belongs to another user",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-fill-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-fill-info"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "31e2dafd-b91b-4e80-bef8-19a2bf5856b0"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"<number>\",\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
												},
												{
													"id": "41b0db8b-c45a-45c8-9f8b-75d909af5b76",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-fill-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-fill-info"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "c237a7b4-739c-4073-9d8f-2f4f511a3684",
													"name": "Validation failed",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"dateOfBirth\": \"<string>\",\n  \"about\": \"<string>\",\n  \"city\": \"<string>\",\n  \"country\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-fill-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-fill-info"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "11d0cddf-a905-4708-976f-690fe3d280ec"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "c1671088-b63b-46b8-90c3-06519ddb258e"
								},
								{
									"name": "profile-delete-avatar",
									"item": [
										{
											"name": "Delete user avatar",
											"id": "51d69733-d195-446f-bebf-81993373d66c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/profile-delete-avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"profile-delete-avatar"
													]
												}
											},
											"response": [
												{
													"id": "4485e2dd-a8d9-452e-90af-3409e3e46d15",
													"name": "Success deleted avatar",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-delete-avatar",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-delete-avatar"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "12b60044-fc7a-464c-9558-5112f22ed0ef",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/users/profile-delete-avatar",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"users",
																"profile-delete-avatar"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "e93b53b1-d273-49d5-a8a6-f8b40dc5c05c"
								}
							],
							"id": "5cd4b4c1-83b4-41f5-9541-6a5283caa626"
						},
						{
							"name": "public-users",
							"item": [
								{
									"name": "profile",
									"item": [
										{
											"name": "{userId}",
											"item": [
												{
													"name": "Get public profile info for user by id",
													"id": "3bfb893a-eb74-468f-9e5d-0a504535d12f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/public-users/profile/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"public-users",
																"profile",
																":userId"
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "8d3cde62-7a28-4353-a81b-d6d30f4815b1",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/public-users/profile/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"public-users",
																		"profile",
																		":userId"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "da0b48cc-66bf-41f7-896f-fad0499edc16"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"about\": \"<string>\",\n  \"avatar\": {\n    \"url\": \"<string>\"\n  }\n}"
														},
														{
															"id": "cea00197-3a16-47ee-abaa-bc8b5d37018d",
															"name": "User not found",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/public-users/profile/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"public-users",
																		"profile",
																		":userId"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "c87e96e6-0447-4e88-a939-df2a5499aee2"
										}
									],
									"id": "97857bae-4dc5-4414-9ec0-35c91ae81f38"
								},
								{
									"name": "Get total count registered users in app",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "41d6c43d-67f8-4ff7-b01e-d3437dff21e9"
											}
										}
									],
									"id": "0c2f8a6c-b610-4a39-a982-d105d79afc23",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public-users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public-users"
											]
										}
									},
									"response": [
										{
											"id": "a0f01ead-43e7-4e47-acb2-c48f29e66ed4",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/public-users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"public-users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "b1e23433-a5ab-497b-a33b-4ba5569ea1a5"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": \"<number>\"\n}"
										}
									]
								}
							],
							"id": "30c84315-0906-498a-b74b-aa583ae63a5b"
						},
						{
							"name": "posts",
							"item": [
								{
									"name": "{postId}",
									"item": [
										{
											"name": "Update user post by id",
											"id": "9280d9a3-b59b-45d1-9f48-5a7e03b499cc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/posts/:postId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"posts",
														":postId"
													],
													"variable": [
														{
															"key": "postId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "a7c5ca07-11c0-4295-a611-cb35d43441ff",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "5799219f-5b92-4c07-8626-b5589963bd92",
													"name": "User not found or not authorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "4f4e6206-7eb4-4566-aa0f-19abdc8c1fed",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "71351a90-72ca-4289-a463-614100c6394e",
													"name": "Post not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "5e2ad9e5-c501-41a4-9a68-7fa5b9df0af8",
													"name": "Validation error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "55b99170-17d2-44af-9c2d-e698d238f0f9"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete user post by id",
											"id": "3899a87d-cf13-4cc4-a4d3-f476e20727d6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/posts/:postId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"posts",
														":postId"
													],
													"variable": [
														{
															"key": "postId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "662b69c4-5e34-4775-b3bc-0b273722f8f3",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "f13f6ee4-7d27-4e42-b55c-e392aaa9cdd4",
													"name": "User not found or not authorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "0b1373f1-5bea-4eaf-8202-0127c9a99bad",
													"name": "User is not the owner of the post",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "9e1ed673-88e0-4be5-bb17-21b8333e3d9b",
													"name": "Post not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "c87cea7d-561b-4919-87dd-7c575ae13eb6"
								},
								{
									"name": "{userId}",
									"item": [
										{
											"name": "{endCursorPostId}",
											"item": [
												{
													"name": "Get user posts",
													"id": "0fa0eb8d-1020-47ad-9fbb-3d775b1e0e6f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/posts/:userId/:endCursorPostId?pageSize=<number>&sortBy=<string>&sortDirection=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"posts",
																":userId",
																":endCursorPostId"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "<number>",
																	"description": "Number of items per page"
																},
																{
																	"key": "sortBy",
																	"value": "<string>",
																	"description": "Sort by parameters. Available values: createdAt, updatedAt. Default value: createdAt"
																},
																{
																	"key": "sortDirection",
																	"value": "desc",
																	"description": "Sort by desc or asc.  Default value: desc"
																}
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "endCursorPostId",
																	"value": "<string>",
																	"description": "ID of the last uploaded post. If endCursorPostId not provided, the first set of posts is returned."
																}
															]
														}
													},
													"response": [
														{
															"id": "47044f96-f34b-494d-b467-3e79d34c82b6",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/posts/:userId/:endCursorPostId?pageSize=<number>&sortBy=<string>&sortDirection=desc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"posts",
																		":userId",
																		":endCursorPostId"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "<number>",
																			"description": "Number of items per page"
																		},
																		{
																			"key": "sortBy",
																			"value": "<string>",
																			"description": "Sort by parameters. Available values: createdAt, updatedAt. Default value: createdAt"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc",
																			"description": "Sort by desc or asc.  Default value: desc"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "endCursorPostId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "81fa36b1-5459-42c3-b452-bdc48c78a66f"
																}
															],
															"cookie": [],
															"body": "{\n  \"pageNumber\": \"<number>\",\n  \"pagesCount\": \"<number>\",\n  \"pageSize\": \"<number>\",\n  \"totalCount\": \"<number>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"postOwnerInfo\": {\n        \"userId\": \"<string>\",\n        \"username\": \"<string>\",\n        \"avatarUrl\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"postOwnerInfo\": {\n        \"userId\": \"<string>\",\n        \"username\": \"<string>\",\n        \"avatarUrl\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"id": "fee972c4-c772-4f9e-a8f6-d213dad42638",
															"name": "User not found",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/posts/:userId/:endCursorPostId?pageSize=<number>&sortBy=<string>&sortDirection=desc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"posts",
																		":userId",
																		":endCursorPostId"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "<number>",
																			"description": "Number of items per page"
																		},
																		{
																			"key": "sortBy",
																			"value": "<string>",
																			"description": "Sort by parameters. Available values: createdAt, updatedAt. Default value: createdAt"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc",
																			"description": "Sort by desc or asc.  Default value: desc"
																		}
																	],
																	"variable": [
																		{
																			"key": "userId"
																		},
																		{
																			"key": "endCursorPostId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "19f04475-b430-4842-835f-51680c60abe7"
										}
									],
									"id": "ffa5244e-6a14-4e84-88c3-fa393177b05a"
								},
								{
									"name": "Add user post",
									"id": "1309f30c-1a6c-43d9-8f87-881a23bbc3e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "value",
													"value": "reference #/components/schemas/ not found in the OpenAPI spec",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/posts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"posts"
											]
										}
									},
									"response": [
										{
											"id": "3b048a04-6aa7-42cf-9d16-770c96b304c8",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "value",
															"value": "reference #/components/schemas/ not found in the OpenAPI spec",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/posts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"posts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "cc5e0521-579a-4f36-a649-4bc7e6e343a8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"images\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"postOwnerInfo\": {\n    \"userId\": \"<string>\",\n    \"username\": \"<string>\",\n    \"avatarUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n}"
										},
										{
											"id": "8ae3918d-c228-4150-bc8f-59c8ec9dee96",
											"name": "Validation failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "value",
															"value": "reference #/components/schemas/ not found in the OpenAPI spec",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/posts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"posts"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"uuid": "d16ec2d1-a1f2-48b5-ae9f-28680dca933a"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "50e6efa6-96b3-4eb7-9d84-5c475c663158"
						},
						{
							"name": "public-posts",
							"item": [
								{
									"name": "all",
									"item": [
										{
											"name": "{endCursorPostId}",
											"item": [
												{
													"name": "Get public posts",
													"id": "e16361df-ae37-4c76-8f3c-d6ee07381b9c",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/public-posts/all/:endCursorPostId?pageSize=<number>&sortBy=<string>&sortDirection=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"public-posts",
																"all",
																":endCursorPostId"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "<number>",
																	"description": "Number of items per page"
																},
																{
																	"key": "sortBy",
																	"value": "<string>",
																	"description": "Sort by parameters. Available values: createdAt, updatedAt. Default value: createdAt"
																},
																{
																	"key": "sortDirection",
																	"value": "desc",
																	"description": "Sort by desc or asc. Default value: desc"
																}
															],
															"variable": [
																{
																	"key": "endCursorPostId",
																	"value": "<string>",
																	"description": "ID of the last uploaded post. If endCursorPostId not provided, the first set of posts is returned."
																}
															]
														}
													},
													"response": [
														{
															"id": "78ab37a4-c457-4297-9506-8bc51848ebcc",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/public-posts/all/:endCursorPostId?pageSize=<number>&sortBy=<string>&sortDirection=desc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"public-posts",
																		"all",
																		":endCursorPostId"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "<number>",
																			"description": "Number of items per page"
																		},
																		{
																			"key": "sortBy",
																			"value": "<string>",
																			"description": "Sort by parameters. Available values: createdAt, updatedAt. Default value: createdAt"
																		},
																		{
																			"key": "sortDirection",
																			"value": "desc",
																			"description": "Sort by desc or asc. Default value: desc"
																		}
																	],
																	"variable": [
																		{
																			"key": "endCursorPostId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "6b33f6fc-8f0f-45ea-b9b9-5631f0f3dabd"
																}
															],
															"cookie": [],
															"body": "{\n  \"pageNumber\": \"<number>\",\n  \"pagesCount\": \"<number>\",\n  \"pageSize\": \"<number>\",\n  \"totalCount\": \"<number>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"postOwnerInfo\": {\n        \"userId\": \"<string>\",\n        \"username\": \"<string>\",\n        \"avatarUrl\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"postOwnerInfo\": {\n        \"userId\": \"<string>\",\n        \"username\": \"<string>\",\n        \"avatarUrl\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											],
											"id": "ef3b3205-dc9e-424f-a2c0-2302c062c3db"
										}
									],
									"id": "3ef2478b-cd52-41bd-888e-b3526037b45e"
								},
								{
									"name": "{postId}",
									"item": [
										{
											"name": "Get public post by id",
											"id": "61532382-1338-4ff0-8fa5-cd15358cbd34",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/public-posts/:postId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"public-posts",
														":postId"
													],
													"variable": [
														{
															"key": "postId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "3ad12543-ac65-4feb-91a1-9896c96629e1",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/public-posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"public-posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "9b9b7f42-39e5-48b4-811c-4bdec74f1fa6"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"images\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"postOwnerInfo\": {\n    \"userId\": \"<string>\",\n    \"username\": \"<string>\",\n    \"avatarUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n}"
												},
												{
													"id": "2dddb065-a4f9-4b4a-84b0-abbe0e466502",
													"name": "Post not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/public-posts/:postId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"public-posts",
																":postId"
															],
															"variable": [
																{
																	"key": "postId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "1bf792b5-1a98-480c-90f7-01acfef712b5"
								}
							],
							"id": "ab325ad6-fa94-47b7-8732-0a94c3487e61"
						},
						{
							"name": "country-catalog",
							"item": [
								{
									"name": "country",
									"item": [
										{
											"name": "Get list of countries",
											"id": "8f4b0ed4-dc97-4b0d-90b6-986b96dc7ef3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/country-catalog/country",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"country-catalog",
														"country"
													]
												}
											},
											"response": [
												{
													"id": "be52342d-c4be-4ba6-a960-2be80907ae60",
													"name": "Success. Or an empty array",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/country-catalog/country",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"country-catalog",
																"country"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "aa769298-f403-4994-b438-a2a2e102c9da"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
												}
											]
										}
									],
									"id": "4eea38eb-3883-4bfa-8621-63c876fd742e"
								},
								{
									"name": "{countryId}",
									"item": [
										{
											"name": "city",
											"item": [
												{
													"name": "Get list of cities",
													"id": "8c7145d1-3fdf-4fa9-9ae7-0c8628658a58",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/country-catalog/:countryId/city",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"country-catalog",
																":countryId",
																"city"
															],
															"variable": [
																{
																	"key": "countryId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "7461d8c3-3dcf-45d7-b602-83a857001666",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/country-catalog/:countryId/city",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"country-catalog",
																		":countryId",
																		"city"
																	],
																	"variable": [
																		{
																			"key": "countryId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "4b3e20dd-5f8f-4f55-9683-b5b46acb4d8d"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"<string>\",\n    \"countryId\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"countryId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
														},
														{
															"id": "2fa72104-6b32-4be5-9f0a-23585204d48f",
															"name": "If cities for a specific country are not found",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/country-catalog/:countryId/city",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"country-catalog",
																		":countryId",
																		"city"
																	],
																	"variable": [
																		{
																			"key": "countryId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "0505b6ce-f9b6-4f60-96c0-537e8abd77ac"
										}
									],
									"id": "904a5a9c-ad2a-4213-8888-22c435cb493f"
								}
							],
							"id": "c88bbcb1-1d32-4542-a427-bb92b5e6fa2d"
						},
						{
							"name": "subscriptions",
							"item": [
								{
									"name": "create-payment",
									"item": [
										{
											"name": "Create payment-subscriptions",
											"id": "551432e1-1e80-454f-8406-8ba71a5663c6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscriptionType\": \"WEEKLY\",\n  \"paymentSystem\": \"STRIPE\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/subscriptions/create-payment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"subscriptions",
														"create-payment"
													]
												}
											},
											"response": [
												{
													"id": "f2ef9990-d03d-4a56-94b7-1d6a9a1aa50f",
													"name": "The payment-subscriptions has been successfully created with status pending, need to pay",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptionType\": \"WEEKLY\",\n  \"paymentSystem\": \"STRIPE\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/create-payment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"create-payment"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "3722fc0b-332c-42cc-ac94-f901e62565b0"
														}
													],
													"cookie": [],
													"body": "{\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "84bf7162-b1d6-45d8-88a1-eaa0d08b9494",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptionType\": \"WEEKLY\",\n  \"paymentSystem\": \"STRIPE\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/create-payment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"create-payment"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "7bab35d0-0982-438b-87f2-0a8119d64a44",
													"name": "Validation failed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriptionType\": \"WEEKLY\",\n  \"paymentSystem\": \"STRIPE\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/create-payment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"create-payment"
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "dacbfe92-d26f-49a7-924c-da57c3211e08"
														}
													],
													"cookie": [],
													"body": "{\n  \"statusCode\": \"<number>\",\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"quis__\": \"<string>\",\n        \"et_79\": \"<string>\"\n      }\n    },\n    {\n      \"property\": \"<string>\",\n      \"constraints\": {\n        \"dolor7a\": \"<string>\",\n        \"pariaturc12\": \"<string>\"\n      }\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "48c73b0d-5c32-4c42-af30-2ac02f07e7c3"
								},
								{
									"name": "my-payments",
									"item": [
										{
											"name": "Get payments",
											"id": "d5fcb4eb-cc0b-4866-83aa-a5d6566758f3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/subscriptions/my-payments?pageSize=<number>&pageNumber=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"subscriptions",
														"my-payments"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "<number>",
															"description": "Number of items per page"
														},
														{
															"key": "pageNumber",
															"value": "<number>",
															"description": "Number of page"
														}
													]
												}
											},
											"response": [
												{
													"id": "f9c0bcfa-7eb2-4b6d-989a-8c2a356bfb96",
													"name": "Get payments",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/my-payments?pageSize=<number>&pageNumber=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"my-payments"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "<number>",
																	"description": "Number of items per page"
																},
																{
																	"key": "pageNumber",
																	"value": "<number>",
																	"description": "Number of page"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "ade0e47a-7319-4a4e-a9eb-166696454a7c"
														}
													],
													"cookie": [],
													"body": "{\n  \"pageNumber\": \"<number>\",\n  \"pagesCount\": \"<number>\",\n  \"pageSize\": \"<number>\",\n  \"totalCount\": \"<number>\",\n  \"items\": [\n    {\n      \"subscriptionType\": \"WEEKLY\",\n      \"price\": \"<number>\",\n      \"paymentSystem\": \"PAYPAL\",\n      \"status\": \"Failed\",\n      \"dateOfPayment\": \"<string>\",\n      \"endDateOfSubscription\": \"<string>\",\n      \"subscriptionId\": \"<string>\"\n    },\n    {\n      \"subscriptionType\": \"WEEKLY\",\n      \"price\": \"<number>\",\n      \"paymentSystem\": \"PAYPAL\",\n      \"status\": \"Success\",\n      \"dateOfPayment\": \"<string>\",\n      \"endDateOfSubscription\": \"<string>\",\n      \"subscriptionId\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"id": "0b66025c-2236-4c7f-a635-a7436c6c803f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/my-payments?pageSize=<number>&pageNumber=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"my-payments"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "<number>",
																	"description": "Number of items per page"
																},
																{
																	"key": "pageNumber",
																	"value": "<number>",
																	"description": "Number of page"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "c84fa35a-0e1d-47ef-9a46-34214de5a1b1"
								},
								{
									"name": "info",
									"item": [
										{
											"name": "Subscription info",
											"id": "613c518a-2632-4ff7-9646-50999c9a7054",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/subscriptions/info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"subscriptions",
														"info"
													]
												}
											},
											"response": [
												{
													"id": "a24d65f3-d619-47c6-9573-86f8d07c74f4",
													"name": "Subscription info",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"info"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"uuid": "73571f53-cf70-4d35-84e6-3a401493efce"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"Canceled\",\n  \"dateOfPayment\": \"<string>\",\n  \"endDateOfSubscription\": \"<string>\",\n  \"subscriptionId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"subscriptionType\": \"<string>\",\n  \"autoRenewal\": \"<boolean>\"\n}"
												},
												{
													"id": "a967862c-b091-4ed5-934b-fd24548b77e2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"info"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "5dbed467-9b92-435c-ba75-be70cd9f0e32",
													"name": "Not found active subscription",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"info"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "67a7d828-98fa-4f58-8b77-68a724b650d5"
								},
								{
									"name": "disable-auto-renewal",
									"item": [
										{
											"name": "Disable auto renewal",
											"id": "d79b82a2-1484-4d66-befd-59fde46345d8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/subscriptions/disable-auto-renewal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"subscriptions",
														"disable-auto-renewal"
													]
												}
											},
											"response": [
												{
													"id": "d669f4ff-3e1d-4ea0-9155-8bc8018ac759",
													"name": "Disable auto renewal",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/disable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"disable-auto-renewal"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "04805506-a837-4d2e-91aa-010d603a7bb0",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/disable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"disable-auto-renewal"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "0d963551-029a-49ea-9748-35a598efddac",
													"name": "Subscription not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/disable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"disable-auto-renewal"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "620e5c71-521b-4bb4-b9de-81075ebea86e"
								},
								{
									"name": "enable-auto-renewal",
									"item": [
										{
											"name": "Enable auto renewal",
											"id": "564f9760-a133-4083-96c1-acbd8be4db8d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/subscriptions/enable-auto-renewal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"subscriptions",
														"enable-auto-renewal"
													]
												}
											},
											"response": [
												{
													"id": "14389b36-84b6-4c29-bbc8-965a35e7241b",
													"name": "Enable auto renewal",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/enable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"enable-auto-renewal"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "0d18570e-550a-4ae6-a6c6-71065e3d30cb",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/enable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"enable-auto-renewal"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"id": "6c97e2b9-f4b9-4de8-a335-462651b1b3a0",
													"name": "Subscription not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/enable-auto-renewal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"enable-auto-renewal"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"id": "0a251d5d-6281-4257-b643-594df46fc02b"
								},
								{
									"name": "testing",
									"item": [
										{
											"name": "cancel-subscription",
											"item": [
												{
													"name": "Cancel current user subscription",
													"id": "d127d9ef-d25f-4067-8c5c-1278f70d0c84",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/testing/cancel-subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"testing",
																"cancel-subscription"
															]
														}
													},
													"response": [
														{
															"id": "8dc8c006-ddf5-46fc-9d2a-6aec1fa15fe2",
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/subscriptions/testing/cancel-subscription",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"subscriptions",
																		"testing",
																		"cancel-subscription"
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "ae9070bf-0ad5-4140-ae86-932c052d12aa",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/subscriptions/testing/cancel-subscription",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"subscriptions",
																		"testing",
																		"cancel-subscription"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"id": "65d3c661-3b12-4f03-98c8-be33e3ab51bb",
															"name": "Subscription not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/subscriptions/testing/cancel-subscription",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"subscriptions",
																		"testing",
																		"cancel-subscription"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "2457b212-0c02-49c1-a2a5-71c1991eb8d8"
										},
										{
											"name": "my-payments",
											"item": [
												{
													"name": "Get payments",
													"id": "bf025aea-c0f7-42ee-b61e-ed51d7cc58e3",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/subscriptions/testing/my-payments?pageSize=<number>&pageNumber=<number>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"subscriptions",
																"testing",
																"my-payments"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "<number>",
																	"description": "Number of items per page"
																},
																{
																	"key": "pageNumber",
																	"value": "<number>",
																	"description": "Number of page"
																}
															]
														}
													},
													"response": [
														{
															"id": "1c6e6701-523b-4b06-8fe8-05ac3c3c70ca",
															"name": "Get payments",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/subscriptions/testing/my-payments?pageSize=<number>&pageNumber=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"subscriptions",
																		"testing",
																		"my-payments"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "<number>",
																			"description": "Number of items per page"
																		},
																		{
																			"key": "pageNumber",
																			"value": "<number>",
																			"description": "Number of page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json",
																	"uuid": "c7cc5ef4-aa79-4f0d-b313-f74efc762f9a"
																}
															],
															"cookie": [],
															"body": "{\n  \"pageNumber\": \"<number>\",\n  \"pagesCount\": \"<number>\",\n  \"pageSize\": \"<number>\",\n  \"totalCount\": \"<number>\",\n  \"items\": [\n    {\n      \"subscriptionType\": \"WEEKLY\",\n      \"price\": \"<number>\",\n      \"paymentSystem\": \"PAYPAL\",\n      \"status\": \"Failed\",\n      \"dateOfPayment\": \"<string>\",\n      \"endDateOfSubscription\": \"<string>\",\n      \"subscriptionId\": \"<string>\"\n    },\n    {\n      \"subscriptionType\": \"WEEKLY\",\n      \"price\": \"<number>\",\n      \"paymentSystem\": \"PAYPAL\",\n      \"status\": \"Success\",\n      \"dateOfPayment\": \"<string>\",\n      \"endDateOfSubscription\": \"<string>\",\n      \"subscriptionId\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"id": "b55dd1a3-d6b4-4bce-b72f-22710ee76a5b",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/subscriptions/testing/my-payments?pageSize=<number>&pageNumber=<number>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"subscriptions",
																		"testing",
																		"my-payments"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "<number>",
																			"description": "Number of items per page"
																		},
																		{
																			"key": "pageNumber",
																			"value": "<number>",
																			"description": "Number of page"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"id": "c204963f-d6db-4481-af60-6abe0b7f7b0e"
										}
									],
									"id": "66600603-c8ba-4c4c-b02a-55fc2ce92f3c"
								}
							],
							"id": "9cc624eb-0603-49bd-9f09-6234b6587e5a"
						}
					],
					"id": "4b821446-4fca-477f-b26f-c20aed0ec318"
				}
			],
			"id": "b7f0879b-6a32-45b1-ba53-822e280deb69"
		}
	]
}